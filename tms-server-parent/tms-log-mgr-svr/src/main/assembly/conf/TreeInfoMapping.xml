<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.taomee.tms.mgr.dao.TreeInfoDao">
	<resultMap id="TreeInfoMap" type="com.taomee.tms.mgr.entity.TreeInfo">
		<id column="node_id" property="nodeId" jdbcType="INTEGER" />
		<result column="node_name" property="nodeName" jdbcType="VARCHAR" />
		<result column="game_id" property="gameId" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result column="is_leaf" property="isLeaf" jdbcType="INTEGER" />
		<result column="is_basic" property="isBasic" jdbcType="INTEGER" />
		<result column="hide" property="hide" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="display_order" property="displayOrder"
			jdbcType="INTEGER" />
	</resultMap>

	<sql id="TreeInfoColumnList">
		node_id, node_name, game_id, parent_id, is_leaf, is_basic,
		hide, status, display_order
	</sql>

	<!-- parent_id node_id node_name is_leaf -->
	<select id="getTreeInfos" resultMap="TreeInfoMap" parameterType="java.lang.Integer">
		select
		parent_id, node_id, node_name, is_leaf
		from t_web_tree
		where
		game_id = #{gameId,jdbcType=INTEGER} and is_basic=0 and hide=0 order
		by display_order, node_id DESC
	</select>

	<select id="searchNodeName" resultMap="TreeInfoMap">
		select
		<include refid="TreeInfoColumnList" />
		from t_web_tree
		where game_id = #{0} and is_basic=0 and hide=0
		and node_name like CONCAT('%', #{1}, '%')
	</select>

	<select id="getTreeInfosBynameGameId" resultMap="TreeInfoMap">
		select
		<include refid="TreeInfoColumnList" />
		from t_web_tree
		where game_id = #{0} and is_basic=0 and node_name = #{1}
	</select>
	
<!-- 如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map，
实际上如果你在传入参数的时候，在MyBatis里面也是会把它封装成一个Map的，
map的key就是参数名，所以这个时候collection属性值就是传入的List或array对象在自己封装的map里面的key. -->
	<select id="getParentId" parameterType="java.util.Map">
		select
		<include refid="TreeInfoColumnList" />
		from t_web_tree
		where node_id in
		<foreach collection="params.values" item="value" 
				 open="(" close=")" separator=",">  
			#{params[${value}]}
		</foreach>
		and is_basic=0 and hide=0
	</select>

	<select id="getTreeInfosByGameIdParentId" resultMap="TreeInfoMap"
		parameterType="java.lang.Integer">
		select
		node_id, node_name, is_leaf
		from t_web_tree
		where game_id = #{0} and parent_id =
		#{1} order by display_order,node_id DESC
	</select>

	<update id="updateNode" parameterType="com.taomee.tms.mgr.entity.TreeInfo">
		update
		t_web_tree
		<trim prefix="set" suffixOverrides=",">
			<if test="nodeName!=null">node_name=#{nodeName},</if>
			<if test="displayOrder!=null and displayOrder!=-1">display_order=#{displayOrder},</if>
			<if test="isLeaf != null and isLeaf!=-1">is_leaf=#{isLeaf},</if>
			<if test="parentId != null and parentId!=-1">parent_id=#{parentId},</if>
		</trim>
		where node_id = #{nodeId} and game_id = #{gameId}
	</update>
	
	
	<update id="updateNodeByParams" parameterType="com.taomee.tms.mgr.entity.TreeInfo">
		update
		t_web_tree
		set node_name=#{nodeName}
		where node_id = #{nodeId} and game_id = #{gameId}
	</update>
	
	
	<select id="getNodeById" resultMap="TreeInfoMap" parameterType="java.lang.Integer">
		select
		<include refid="TreeInfoColumnList" />
		from t_web_tree
		where
		node_id = #{nodeId,jdbcType=INTEGER} and is_basic=0 
	</select>
	
	<insert id="insertTreeInfo" parameterType="com.taomee.tms.mgr.entity.TreeInfo"
		useGeneratedKeys="true" keyProperty="nodeId">
		insert into
		t_web_tree (node_name, game_id, parent_id, is_leaf, is_basic)
		values
		(#{nodeName,jdbcType=VARCHAR},#{gameId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER},#{isLeaf,jdbcType=INTEGER},
		#{isBasic,jdbcType=INTEGER})
	</insert>
	
	<select id="getNodeByPid" parameterType="com.taomee.tms.mgr.entity.TreeInfo" resultMap="TreeInfoMap">
		select 
		<include refid="TreeInfoColumnList" />
		from t_web_tree
		<where>
			<if test="parentId!=null and parentId!=0">
				parent_id=#{parentId}
			</if>
			<if test="parentId==null or parentId==0">
				parent_id=0
			</if>
			<if test="nodeName!=null">
				and node_name=#{nodeName}
			</if>
			<if test="gameId!=null and gameId!=0">
				 and game_id=#{gameId}
			</if>
				 and is_basic=#{isBasic}
		</where>
		order by display_order , is_leaf , node_id DESC
	</select>
	
	<delete id="deleteNode" parameterType="java.lang.Integer">
		delete from
		t_web_tree
		<where>
			<if test="nodeId==null or nodeId==0">
				node_id=0
			</if>
			
			<if test="nodeId!=null and nodeId!=0">
				node_id=#{nodeId}
			</if>
		</where>
	</delete>
	
</mapper> 