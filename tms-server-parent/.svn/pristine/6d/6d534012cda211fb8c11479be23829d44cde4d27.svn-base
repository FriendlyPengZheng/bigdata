package com.taomee.tms.mgr.ctl.common;

import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.dubbo.config.annotation.Reference;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.taomee.tms.mgr.api.LogMgrService;
import com.taomee.tms.mgr.entity.CategoryInfo;
import com.taomee.tms.mgr.entity.EconomyInfo;
import com.taomee.tms.mgr.tools.DateTools;
import com.taomee.tms.mgr.tools.Message;

@Controller
@Scope("session")
@RequestMapping(value="/common/economy")
public class EconomyDataController {
	
	@Reference
	private LogMgrService logMgrService;
	
	private static final Logger logger = LoggerFactory
			.getLogger(DataController.class);
	
	Integer platformId = 0;
	Integer zoneId = 0;
	Integer sId = 0;
	Integer gameId = 0;
	double factor = 0d;
	String timeFrom = null;
	String timeTo = null;
	String sstid = null;
	//Integer server_id=0;
	
	@RequestMapping(value="/getItemSaleTop")
	@ResponseBody
	public Message getItemSaleTop(
			HttpServletRequest request, 
			HttpServletResponse response){
		
		getParam(request, response);
		Integer server_id = logMgrService.getServerIDByGPZS(gameId, platformId, zoneId, sId);
		List<EconomyInfo> economyInfoList = logMgrService.getItemSaleTop10(sstid, -1, timeFrom, timeTo, server_id);		
		if(economyInfoList.size()==0){
			return new Message().setSuccessMessage().setData(new JSONArray().add(null));
		}
		/*Comparator<EconomyInfo> comp = Collections.reverseOrder();
		Collections.sort(economyInfoList, comp);*/
		System.out.println("server_id="+server_id);
		System.out.println("factor="+factor);
		System.out.println("sstid="+sstid);
		String key = "\"key\":[";
		String data1 = "{"+"\"name\""+":"+"\"销售金额\""+","+"\"data\""+":[";
		String data2 = "{"+"\"name\""+":"+"\"销售数量\""+","+"\"data\""+":[";
		String data0 = "\"data\""+":[";
		System.out.println("economyInfoList.size()="+economyInfoList.size());
		for (int i = 0 ; i < economyInfoList.size() ; i++) {
			
			if(i==economyInfoList.size()-1){
				key = key + "\""+economyInfoList.get(i).getItem_name()+"\""+"],";
			}else{
				key = key + "\""+economyInfoList.get(i).getItem_name()+"\""+",";
			}
			
			if(i==economyInfoList.size()-1){
				data1 = data1 + "\""+economyInfoList.get(i).getsalemoney()*factor+"\""+"]}";
			}else{
				data1 = data1 + "\""+economyInfoList.get(i).getsalemoney()*factor+"\""+",";
			}
			
			if(i==economyInfoList.size()-1){
				data2 = data2 + "\""+economyInfoList.get(i).getSalenum()+"\""+"]}";
			}else{
				data2 = data2 + "\""+economyInfoList.get(i).getSalenum()+"\""+",";
			}
			
		}
		data0 = data0 + data1 + "," + data2 +"]";
		String dataStr = "[{" + key + data0 + "}]";
		//Object data = JSON.toJSON(dataStr);

		Message message = new Message().setSuccessMessage().setData(JSON.parse(dataStr));
		return message;
		
	}
	
	@RequestMapping(value="/getItemSaleList")
	@ResponseBody
	public Message getItemSaleList(HttpServletRequest request,HttpServletResponse response){
		getParam(request, response);
		Integer server_id = logMgrService.getServerIDByGPZS(gameId, platformId, zoneId, sId);
		List<EconomyInfo> itemList = logMgrService.getItemSaleList(sstid, -1, timeFrom, timeTo, server_id);
		if(itemList.size()==0){
			return new Message().setSuccessMessage().setData(new JSONArray().add(null));
		}
		JSONArray jsonArray = new JSONArray();
		for (EconomyInfo economyInfo : itemList) {
			JSONObject jsonObject = new JSONObject();
			String item_id = economyInfo.getItem_id();
			String item_name = economyInfo.getItem_name();
			Integer buycount = economyInfo.getBuycount();
			Integer saleMoney = economyInfo.getsalemoney();
			Integer saleNum = economyInfo.getSalenum();
			jsonObject.put("item_id",item_id );
			jsonObject.put("item_name",item_name );
			jsonObject.put("buycount",buycount );
			jsonObject.put("salemoney", saleMoney*factor);
			jsonObject.put("salenum", saleNum);
			jsonArray.add(jsonObject);
		}
		Message message = new Message().setSuccessMessage().setData(jsonArray);
		return message;
	}

	@RequestMapping(value="/getItemSaleListTotal")
	@ResponseBody
	public Message getItemSaleListTotal(HttpServletRequest request,HttpServletResponse response){
		getParam(request, response);
		
		Integer server_id = logMgrService.getServerIDByGPZS(gameId, platformId, zoneId, sId);
		Integer total = logMgrService.getItemSaleListTotal(sstid, -1, timeFrom, timeTo, server_id);
		Message message = new Message().setSuccessMessage().setData(JSON.parse(total.toString()));
		return message;
	}
	
	@RequestMapping("/getItemSaleDetail")
	@ResponseBody
	public Message getItemSaleDetail(HttpServletRequest request,HttpServletResponse response){
		getParam(request, response);
		String item_id = request.getParameter("item_id");
		Integer server_id = logMgrService.getServerIDByGPZS(gameId, platformId, zoneId, sId);
		List<EconomyInfo> itemDetailList = logMgrService.getItemSaleDetail(sstid, -1, timeFrom, timeTo, server_id,item_id);
		if(itemDetailList.size()==0){
			return new Message().setSuccessMessage().setData(new JSONArray().add(null));
		}
		JSONArray keyArray = new JSONArray();
		JSONArray jsonArrayDataMoney = new JSONArray();
		JSONArray jsonArrayDataNum = new JSONArray();
		JSONArray jsonArrayDataCount = new JSONArray();
		for (EconomyInfo economyInfo : itemDetailList) {
			keyArray.add(DateTools.timeStamp2Date(Long.parseLong(economyInfo.getTime()), "yyyy-MM-dd"));
			jsonArrayDataMoney.add(economyInfo.getsalemoney()*factor);
			jsonArrayDataNum.add(economyInfo.getSalenum());
			jsonArrayDataCount.add(economyInfo.getBuyucount());
		}
		JSONObject jsonObjectMoney = new JSONObject();
		JSONObject jsonObjectNum = new JSONObject();
		JSONObject jsonObjectCount = new JSONObject();
		jsonObjectMoney.put("name", "销售金额");
		jsonObjectMoney.put("data", jsonArrayDataMoney);
		jsonObjectNum.put("name", "销售数量");
		jsonObjectNum.put("data", jsonArrayDataNum);
		jsonObjectCount.put("name", "购买人数");
		jsonObjectCount.put("data", jsonArrayDataCount);
		JSONArray dataArray = new JSONArray();
		dataArray.add(jsonObjectMoney);
		dataArray.add(jsonObjectNum);
		dataArray.add(jsonObjectCount);
		/*JSONObject dataObject = new JSONObject();
		dataObject.put("data", dataArray);
		JSONObject keyObject = new JSONObject();
		keyObject.put("key", keyArray);*/
		JSONObject dataInfoObject = new JSONObject();
		dataInfoObject.put("data", dataArray);
		dataInfoObject.put("key", keyArray);
		JSONArray dataInfoArray = new JSONArray();
		dataInfoArray.add(dataInfoObject);
		Message message = new Message().setSuccessMessage().setData(dataInfoArray);
		return message;
	}
	/*
	@RequestMapping(value="/getItemSaleListTotal")
	@ResponseBody
	public Message getItemSaleListTotal(){
		
		Message message = new Message().setSuccessMessage().setData("");
		return message;
	}
	*/
	

	@RequestMapping(value="/getCategorySaleList")
	@ResponseBody
	public Message getCategorySaleList(HttpServletRequest request,HttpServletResponse response){
		Integer parent_id = 0;
		if(request.getParameter("parent_id") !=null){
			parent_id = Integer.parseInt(request.getParameter("parent_id"));
		}else{
			parent_id = 0;
		}
		Integer server_id = logMgrService.getServerIDByGPZS(gameId, platformId, zoneId, sId);
		List<CategoryInfo> categoryInfoList = logMgrService.getCategorySaleList(server_id, sstid, timeFrom, timeTo, "tmp_category_table", parent_id);
//		JSONObject jsonObject0 = new JSONObject();
//		JSONObject jsonObject1 = new JSONObject();
		if(categoryInfoList.size()==0){
			return new Message().setSuccessMessage().setData(new JSONArray().add(null));
		}
		JSONArray jsonArray = new JSONArray();
		for (CategoryInfo categoryInfo : categoryInfoList) {
			JSONObject jsonObject = new JSONObject();
			jsonObject.put("category_id", categoryInfo.getCategory_id());
			jsonObject.put("category_name", categoryInfo.getCategory_name());
			jsonObject.put("is_leaf", categoryInfo.getIs_leaf());
			jsonObject.put("buycount", categoryInfo.getBuycount());
			jsonObject.put("salenum", categoryInfo.getSalenum());
			jsonObject.put("salemoney", categoryInfo.getSalemoney());
			jsonArray.add(jsonObject);
		}
		Message message = new Message().setSuccessMessage().setData(jsonArray);
		return message;
	}
	
	
	@RequestMapping("/getCategorySaleDetail")
	@ResponseBody
	public Message getCategorySaleDetail(HttpServletRequest request,HttpServletResponse response){
		getParam(request, response);
		Integer category_id = Integer.parseInt(request.getParameter("category_id"));
		Integer server_id = logMgrService.getServerIDByGPZS(gameId, platformId, zoneId, sId);
		List<CategoryInfo> categoryDetailList = logMgrService.getCategorySaleDetail(category_id, sstid, server_id, timeFrom, timeTo);
		System.out.println("categoryDetailList.size()="+categoryDetailList.size());
		if(categoryDetailList.size()==0){
			return new Message().setSuccessMessage().setData(new JSONArray().add(null));
		}
		JSONArray keyArray = new JSONArray();
		JSONArray jsonArrayDataMoney = new JSONArray();
		JSONArray jsonArrayDataNum = new JSONArray();
		JSONArray jsonArrayDataCount = new JSONArray();
		for (CategoryInfo categoryInfo : categoryDetailList) {
			keyArray.add(DateTools.timeStamp2Date(Long.parseLong(categoryInfo.getTime()), "yyyy-MM-dd"));
			jsonArrayDataMoney.add(categoryInfo.getSalemoney()*factor);
			jsonArrayDataNum.add(categoryInfo.getSalenum());
			jsonArrayDataCount.add(categoryInfo.getBuyucount());
		}
		JSONObject jsonObjectMoney = new JSONObject();
		JSONObject jsonObjectNum = new JSONObject();
		JSONObject jsonObjectCount = new JSONObject();
		jsonObjectMoney.put("name", "销售金额");
		jsonObjectMoney.put("data", jsonArrayDataMoney);
		jsonObjectNum.put("name", "销售数量");
		jsonObjectNum.put("data", jsonArrayDataNum);
		jsonObjectCount.put("name", "购买人数");
		jsonObjectCount.put("data", jsonArrayDataCount);
		JSONArray dataArray = new JSONArray();
		dataArray.add(jsonObjectMoney);
		dataArray.add(jsonObjectNum);
		dataArray.add(jsonObjectCount);
		/*JSONObject dataObject = new JSONObject();
		dataObject.put("data", dataArray);
		JSONObject keyObject = new JSONObject();
		keyObject.put("key", keyArray);*/
		JSONObject dataInfoObject = new JSONObject();
		dataInfoObject.put("data", dataArray);
		dataInfoObject.put("key", keyArray);
		JSONArray dataInfoArray = new JSONArray();
		dataInfoArray.add(dataInfoObject);
		Message message = new Message().setSuccessMessage().setData(dataInfoArray);
		return message;
	}
	
	@RequestMapping(value="/getCategorySaleListTotal")
	@ResponseBody
	public Message getCategorySaleListTotal(HttpServletRequest request,HttpServletResponse response){
		Integer server_id = logMgrService.getServerIDByGPZS(gameId, platformId, zoneId, sId);
		Integer total = logMgrService.getCategorySaleListTotal(server_id, sstid, timeFrom, timeTo);
		Message message = new Message().setSuccessMessage().setData(JSON.parse(total.toString()));
		return message;
	}
	
	
/*	protected double adjustFactor(HttpServletRequest request,HttpServletResponse response){
		// 页游游戏币销售金额乘0.01
        if ("_coinsbuyitem_".equals(request.getParameter("sstid"))  &&
                "webgame".equals(request.getParameter("type"))) {
            double factor = 0.01;
            return factor;
        }
        return 1d;
	}*/
	
	private void getParam(HttpServletRequest request,HttpServletResponse response){
		String fromDateString = (request.getParameter("from[0]") == null)?  request.getParameter("from") : request.getParameter("from[0]");
		String toDateString = (request.getParameter("to[0]") == null)?  request.getParameter("to") : request.getParameter("to[0]");
		timeFrom = DateTools.date2TimeStamp(fromDateString, "yyyy-MM-dd").toString();
		timeTo = DateTools.date2TimeStamp(toDateString, "yyyy-MM-dd").toString();
		System.out.println("from="+fromDateString);
		System.out.println("to="+toDateString);
		if(request.getParameter("factor")==null){
			factor = 0.01d;
		}else{
			factor = Double.parseDouble(request.getParameter("factor"));
		}
		sstid = request.getParameter("sstid");
		gameId = Integer.parseInt(request.getParameter("game_id"));
		
		if(request.getParameter("platform_id")==null){
			platformId = -1;
		}else{
			platformId = Integer.parseInt(request.getParameter("platform_id"));
		}
		
		if(request.getParameter("zone_id")==null){
			zoneId = -1;
		}else{
			zoneId = Integer.parseInt(request.getParameter("zone_id"));
		}
		
		if(request.getParameter("s_id")==null){
			sId = -1;
		}else{
			sId = Integer.parseInt(request.getParameter("s_id"));
		}
	}
	
}
