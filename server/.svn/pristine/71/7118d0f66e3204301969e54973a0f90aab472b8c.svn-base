package com.taomee.bigdata.itemsPlus;

import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;
import org.apache.hadoop.mapred.lib.*;

import com.taomee.bigdata.lib.ReturnCode;
import com.taomee.bigdata.lib.ReturnCodeMgr;
import com.taomee.bigdata.util.LogAnalyser;

import java.io.IOException;

public class ItemNewMapper extends MapReduceBase implements Mapper<LongWritable, Text, Text, Text>
{
    private Text outputKey = new Text();
    private Text outputValue = new Text();
    private ReturnCode r = ReturnCode.get();
    private ReturnCodeMgr rOutput;
    private Reporter reporter;
    private LogAnalyser logAnalyser = new LogAnalyser();

    public void configure(JobConf job) {
        rOutput = new ReturnCodeMgr(job);
    }

    public void close() throws IOException {
        rOutput.close(reporter);
    }

    public void map(LongWritable key, Text value, OutputCollector<Text, Text> output, Reporter reporter) throws IOException {
        this.reporter = reporter;
        // game, platform, zone, server uid
        String items[] = value.toString().split("\t");
        if(items.length != 5){
        	r.setCode("E_ITEM_NEWMAPPER_SPLIT", String.format("%d != 5", items.length));
            return;
        }
        outputKey.set(String.format("%s\t%s\t%s\t%s",
                    items[0],items[1],items[2],items[3],items[4]));
        outputValue.set(String.format("%s", "new"));
        output.collect(outputKey, outputValue);
        
    }

}
