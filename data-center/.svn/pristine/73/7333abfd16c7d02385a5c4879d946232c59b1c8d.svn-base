// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: alarm_request.proto

#ifndef PROTOBUF_alarm_5frequest_2eproto__INCLUDED
#define PROTOBUF_alarm_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace StatAlarmerProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_alarm_5frequest_2eproto();
void protobuf_AssignDesc_alarm_5frequest_2eproto();
void protobuf_ShutdownFile_alarm_5frequest_2eproto();

class AlarmContact;
class StatAlarmRequest;
class StatAlarmResponse;

// ===================================================================

class AlarmContact : public ::google::protobuf::Message {
 public:
  AlarmContact();
  virtual ~AlarmContact();

  AlarmContact(const AlarmContact& from);

  inline AlarmContact& operator=(const AlarmContact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmContact& default_instance();

  void Swap(AlarmContact* other);

  // implements Message ----------------------------------------------

  AlarmContact* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmContact& from);
  void MergeFrom(const AlarmContact& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string email = 2;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 2;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // required string mobile = 3;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 3;
  inline const ::std::string& mobile() const;
  inline void set_mobile(const ::std::string& value);
  inline void set_mobile(const char* value);
  inline void set_mobile(const char* value, size_t size);
  inline ::std::string* mutable_mobile();
  inline ::std::string* release_mobile();
  inline void set_allocated_mobile(::std::string* mobile);

  // @@protoc_insertion_point(class_scope:StatAlarmerProto.AlarmContact)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_mobile();
  inline void clear_has_mobile();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* email_;
  ::std::string* mobile_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_alarm_5frequest_2eproto();
  friend void protobuf_AssignDesc_alarm_5frequest_2eproto();
  friend void protobuf_ShutdownFile_alarm_5frequest_2eproto();

  void InitAsDefaultInstance();
  static AlarmContact* default_instance_;
};
// -------------------------------------------------------------------

class StatAlarmRequest : public ::google::protobuf::Message {
 public:
  StatAlarmRequest();
  virtual ~StatAlarmRequest();

  StatAlarmRequest(const StatAlarmRequest& from);

  inline StatAlarmRequest& operator=(const StatAlarmRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatAlarmRequest& default_instance();

  void Swap(StatAlarmRequest* other);

  // implements Message ----------------------------------------------

  StatAlarmRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatAlarmRequest& from);
  void MergeFrom(const StatAlarmRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // repeated .StatAlarmerProto.AlarmContact send_to = 3;
  inline int send_to_size() const;
  inline void clear_send_to();
  static const int kSendToFieldNumber = 3;
  inline const ::StatAlarmerProto::AlarmContact& send_to(int index) const;
  inline ::StatAlarmerProto::AlarmContact* mutable_send_to(int index);
  inline ::StatAlarmerProto::AlarmContact* add_send_to();
  inline const ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact >&
      send_to() const;
  inline ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact >*
      mutable_send_to();

  // repeated .StatAlarmerProto.AlarmContact send_cc = 4;
  inline int send_cc_size() const;
  inline void clear_send_cc();
  static const int kSendCcFieldNumber = 4;
  inline const ::StatAlarmerProto::AlarmContact& send_cc(int index) const;
  inline ::StatAlarmerProto::AlarmContact* mutable_send_cc(int index);
  inline ::StatAlarmerProto::AlarmContact* add_send_cc();
  inline const ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact >&
      send_cc() const;
  inline ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact >*
      mutable_send_cc();

  // optional uint32 group_id = 5;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 5;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:StatAlarmerProto.StatAlarmRequest)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* title_;
  ::std::string* content_;
  ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact > send_to_;
  ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact > send_cc_;
  ::google::protobuf::uint32 group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_alarm_5frequest_2eproto();
  friend void protobuf_AssignDesc_alarm_5frequest_2eproto();
  friend void protobuf_ShutdownFile_alarm_5frequest_2eproto();

  void InitAsDefaultInstance();
  static StatAlarmRequest* default_instance_;
};
// -------------------------------------------------------------------

class StatAlarmResponse : public ::google::protobuf::Message {
 public:
  StatAlarmResponse();
  virtual ~StatAlarmResponse();

  StatAlarmResponse(const StatAlarmResponse& from);

  inline StatAlarmResponse& operator=(const StatAlarmResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatAlarmResponse& default_instance();

  void Swap(StatAlarmResponse* other);

  // implements Message ----------------------------------------------

  StatAlarmResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatAlarmResponse& from);
  void MergeFrom(const StatAlarmResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:StatAlarmerProto.StatAlarmResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_alarm_5frequest_2eproto();
  friend void protobuf_AssignDesc_alarm_5frequest_2eproto();
  friend void protobuf_ShutdownFile_alarm_5frequest_2eproto();

  void InitAsDefaultInstance();
  static StatAlarmResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// AlarmContact

// required string name = 1;
inline bool AlarmContact::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmContact::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmContact::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmContact::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AlarmContact::name() const {
  return *name_;
}
inline void AlarmContact::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AlarmContact::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AlarmContact::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmContact::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* AlarmContact::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AlarmContact::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string email = 2;
inline bool AlarmContact::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmContact::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmContact::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmContact::clear_email() {
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& AlarmContact::email() const {
  return *email_;
}
inline void AlarmContact::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(value);
}
inline void AlarmContact::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(value);
}
inline void AlarmContact::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmContact::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  return email_;
}
inline ::std::string* AlarmContact::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AlarmContact::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string mobile = 3;
inline bool AlarmContact::has_mobile() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmContact::set_has_mobile() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmContact::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmContact::clear_mobile() {
  if (mobile_ != &::google::protobuf::internal::kEmptyString) {
    mobile_->clear();
  }
  clear_has_mobile();
}
inline const ::std::string& AlarmContact::mobile() const {
  return *mobile_;
}
inline void AlarmContact::set_mobile(const ::std::string& value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::kEmptyString) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
}
inline void AlarmContact::set_mobile(const char* value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::kEmptyString) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
}
inline void AlarmContact::set_mobile(const char* value, size_t size) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::kEmptyString) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlarmContact::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::kEmptyString) {
    mobile_ = new ::std::string;
  }
  return mobile_;
}
inline ::std::string* AlarmContact::release_mobile() {
  clear_has_mobile();
  if (mobile_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mobile_;
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AlarmContact::set_allocated_mobile(::std::string* mobile) {
  if (mobile_ != &::google::protobuf::internal::kEmptyString) {
    delete mobile_;
  }
  if (mobile) {
    set_has_mobile();
    mobile_ = mobile;
  } else {
    clear_has_mobile();
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// StatAlarmRequest

// optional string title = 1;
inline bool StatAlarmRequest::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatAlarmRequest::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatAlarmRequest::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatAlarmRequest::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& StatAlarmRequest::title() const {
  return *title_;
}
inline void StatAlarmRequest::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void StatAlarmRequest::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void StatAlarmRequest::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatAlarmRequest::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* StatAlarmRequest::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StatAlarmRequest::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string content = 2;
inline bool StatAlarmRequest::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatAlarmRequest::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatAlarmRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatAlarmRequest::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& StatAlarmRequest::content() const {
  return *content_;
}
inline void StatAlarmRequest::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void StatAlarmRequest::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void StatAlarmRequest::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatAlarmRequest::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* StatAlarmRequest::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StatAlarmRequest::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .StatAlarmerProto.AlarmContact send_to = 3;
inline int StatAlarmRequest::send_to_size() const {
  return send_to_.size();
}
inline void StatAlarmRequest::clear_send_to() {
  send_to_.Clear();
}
inline const ::StatAlarmerProto::AlarmContact& StatAlarmRequest::send_to(int index) const {
  return send_to_.Get(index);
}
inline ::StatAlarmerProto::AlarmContact* StatAlarmRequest::mutable_send_to(int index) {
  return send_to_.Mutable(index);
}
inline ::StatAlarmerProto::AlarmContact* StatAlarmRequest::add_send_to() {
  return send_to_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact >&
StatAlarmRequest::send_to() const {
  return send_to_;
}
inline ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact >*
StatAlarmRequest::mutable_send_to() {
  return &send_to_;
}

// repeated .StatAlarmerProto.AlarmContact send_cc = 4;
inline int StatAlarmRequest::send_cc_size() const {
  return send_cc_.size();
}
inline void StatAlarmRequest::clear_send_cc() {
  send_cc_.Clear();
}
inline const ::StatAlarmerProto::AlarmContact& StatAlarmRequest::send_cc(int index) const {
  return send_cc_.Get(index);
}
inline ::StatAlarmerProto::AlarmContact* StatAlarmRequest::mutable_send_cc(int index) {
  return send_cc_.Mutable(index);
}
inline ::StatAlarmerProto::AlarmContact* StatAlarmRequest::add_send_cc() {
  return send_cc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact >&
StatAlarmRequest::send_cc() const {
  return send_cc_;
}
inline ::google::protobuf::RepeatedPtrField< ::StatAlarmerProto::AlarmContact >*
StatAlarmRequest::mutable_send_cc() {
  return &send_cc_;
}

// optional uint32 group_id = 5;
inline bool StatAlarmRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StatAlarmRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StatAlarmRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StatAlarmRequest::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 StatAlarmRequest::group_id() const {
  return group_id_;
}
inline void StatAlarmRequest::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
}

// -------------------------------------------------------------------

// StatAlarmResponse

// required uint32 ret = 1;
inline bool StatAlarmResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatAlarmResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatAlarmResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatAlarmResponse::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 StatAlarmResponse::ret() const {
  return ret_;
}
inline void StatAlarmResponse::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace StatAlarmerProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_alarm_5frequest_2eproto__INCLUDED
